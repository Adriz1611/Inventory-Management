name: Go Build and Release

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Set up Go environment
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      # Step 3: Install dependencies in ./backend
      - name: Install dependencies
        working-directory: ./backend
        run: go mod tidy

      # Step 4: Build the Go project in ./backend
      - name: Build
        working-directory: ./backend
        run: go build -o my-app main.go

      # Step 5: (Optional) Run tests in ./backend
      - name: Run tests
        working-directory: ./backend
        run: go test ./...

      # Step 6: Upload the build artifact
      - name: Upload release binary
        uses: actions/upload-artifact@v3
        with:
          name: my-app-binary
          path: ./backend/my-app

  release:
    needs: build
    runs-on: ubuntu-latest
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      # Step 1: Check out the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Download the build artifact
      - name: Download artifact
        uses: actions/download-artifact@v3
        with:
          name: my-app-binary

      # Step 3: Create a GitHub release and upload the binary
      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          artifacts: my-app-binary
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Built with GitHub Actions.
          draft: false
          prerelease: false
