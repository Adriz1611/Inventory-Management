name: Go Build

on:
  push:
    branches:
      - main
    tags:
      - 'v*.*.*'

jobs:
  build:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        os: [linux, darwin, windows]
        arch: [amd64, arm64]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.23'

      - name: Install dependencies
        working-directory: ./backend
        run: go mod tidy

      - name: Build
        working-directory: ./backend
        run: |
          # Build binary for the OS/Arch combination
          GOOS=${{ matrix.os }} GOARCH=${{ matrix.arch }} go build -o my-app-${{ matrix.os }}-${{ matrix.arch }} main.go

      - name: Upload release binary
        uses: actions/upload-artifact@v3
        with:
          name: my-app-${{ matrix.os }}-${{ matrix.arch }}
          path: ./backend/my-app-${{ matrix.os }}-${{ matrix.arch }} # Upload the actual binary file, not a directory

  release:
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: startsWith(github.ref, 'refs/tags/')
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Download all artifacts
        uses: actions/download-artifact@v3

      # Rename Windows binaries to include .exe extension
      - name: Rename Windows Binaries
        if: runner.os == 'windows'
        run: |
          mv my-app-windows-amd64 my-app-windows-amd64.exe
          mv my-app-windows-arm64 my-app-windows-arm64.exe

      - name: Create Release
        uses: ncipollo/release-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: |
              /home/runner/work/Inventory-Management/Inventory-Management/my-app-linux-amd64
              /home/runner/work/Inventory-Management/Inventory-Management/my-app-linux-arm64
              /home/runner/work/Inventory-Management/Inventory-Management/my-app-darwin-amd64
              /home/runner/work/Inventory-Management/Inventory-Management/my-app-darwin-arm64
              /home/runner/work/Inventory-Management/Inventory-Management/my-app-windows-amd64.exe
              /home/runner/work/Inventory-Management/Inventory-Management/my-app-windows-arm64.exe
          tag: ${{ github.ref_name }}
          name: Release ${{ github.ref_name }}
          body: |
            Cross-compiled binaries for multiple platforms.
          draft: false
          prerelease: false
